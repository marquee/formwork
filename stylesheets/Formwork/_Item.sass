$Item_Cover--intrinsic_ratio : 16/9 !default
$Item_Cover--default_height  : 800px !default


// The minimum width of the known-number Item variants.
$Item--min_width: 170px !default

// Each size is specified as a name, the number of levels it responds to,
// the minimum width, the lower-bound of the cover height, and the upper-
// bound of that height. The levels are the maximum number of that size
// that will be on a row.
$Item--variable_sizes: (small 4 200px 200px 275px, medium 3 300px 275px 600px, large 2 400px 400px 600px)



// # Item component
//
// An Item is a block of content that generally has a title, cover, subtitle,
// and “deck” (a description or preview). The common use is as an item in a
// list of stories.
//
// Assumes a markup structure similar to this. The actual subcomponents MAY be
// regrouped as desired, though SHOULD be in the same relative order.
//
// ```html
// <div class="Item -intrinsic_ratio">
//     <div class="Item_CoverWrapper">
//         <div class="Item_Cover" style="background-image: url(http://placepuppy.it/800/600/)">
//             <div class="Item_Info -centered--horizontal">
//                 <div class="Item_Supertitle">Supertitle</div>
//                 <h1 class="Item_Title">Title</h1>
//             </div>
//         </div>
//     </div>
//     <div class="Item_Info">
//         <div class="Item_Subtitle">Subtitle</div>
//         <p class="Item_Deck">
//             Nulla vitae elit libero, a pharetra augue. Morbi leo risus, porta
//             ac consectetur ac, vestibulum at eros. Cras justo odio, dapibus ac
//             facilisis in, egestas eget quam.
//         </p>
//     </div>
// </div>
// ```
%Item
    +extend(Cover)
    +box-sizing(border-box)
    display         : inline-block
    vertical-align  : top
    width           : 100%

    // Build out the placeholder selectors for the known-number Item variants.
    // These items will stay the given percentage of the available width until
    // they reach the minimum width specified by `$Item--min_width` at which
    // point they will stack, one per row.
    @each $size_set in (fifth 5, fourth 4, third 3, half 2)
        $name: nth($size_set, 1)
        $val: nth($size_set, 2)
        &%-size--#{ $name }
            +respond-to-gt($Item--min_width * $val)
                width: percentage(1 / $val)

                &%-intrinsic_ratio
                    +Cover--intrinsic_ratio($Cover--default_ratio * $val)

                %Item_CoverImage
                    height: $Item_Cover--default_height / $val
                    &%-height--half
                        height: $Item_Cover--default_height / $val * (1 / 2)
                    &%-height--twothirds
                        height: $Item_Cover--default_height / $val * (2 / 3)

    // Build out the placeholder selectors for the more flexible variants.
    // The covers get variants to control their height as well,
    // `-height--half` and `-height--twothirds` that, as named, set the height
    // to be 1/2 or 2/3 of the normal height.
    @each $size_set in $Item--variable_sizes
        $name           : nth($size_set, 1)
        $levels         : nth($size_set, 2)
        $min_width      : nth($size_set, 3)
        $height_lower   : nth($size_set, 4)
        $height_upper   : nth($size_set, 5)

        &%-size--#{ $name }
            min-width: $min_width

            %Item_CoverImage
                height: $height_lower
                &%-height--half
                    height: $height_lower * (1 / 2)
                &%-height--twothirds
                    height: $height_lower * (2 / 3)

            @for $level from 2 through $levels
                +respond-to-gt($min_width * ($level + 1))
                    width: 100% / $level

                    &%-intrinsic_ratio
                        +Cover--intrinsic_ratio($Cover--default_ratio * $level)

                    $this_height: $height_lower + ($height_upper - $height_lower) / ($levels - 1)
                    %Item_CoverImage
                        height: $this_height
                        &%-height--half
                            height: $this_height * (1 / 2)
                        &%-height--twothirds
                            height: $this_height * (2 / 3)


// Base subcomponent for use by all Item subcomponents.
%_Item_Subcomponent
    +box-sizing(border-box)

// # Item_Cover subcomponent
//
// An optional subcomponent of the Item component that displays a cover image. It
// uses the `style=""` attribute and the `background-image: url()` rule
// instead of an `img` in order to control the aspect ratio.
//
// The cover MAY contain other subcomponents, like Item_Supertitle and Item_Title,
// even Item_Deck, grouped in an Item_Info subcomponent. The Item_Info allows for
// positioning the interior subcomponents as a group.
//
// ```html
// <div class="Item">
//     <div class="Item_Cover" style="background-image: url(http://placepuppy.it/800/600/)">
//         <div class="Item_Info">
//             <div class="Item_Supertitle">Supertitle</div>
//             <h2 class="Item_Title">Title</h2>
//         </div>
//     </div>
// </div>
// ```
//
// ## Variants
//
//
// ### `-height--*`
//
// The height of the cover is dependent on the size of the Item it is inside. It
// can be controlled with the `-height--half` and `-height--twothirds` variants,
// which set the cover to half or twothirds of its usual height.
//
// The parent Item MAY have a variant like `-intrinsic_ratio`, which causes the
// Item_Cover to instead scale with a consistent aspect ratio. This variant is on
// the item since it requires an additional wrapper around the cover, the
// Item_CoverWrapper subcomponent. If this is active, then the `-height--*` variants
// don’t make much sense and SHOULD NOT be used.
//
// #### `-height--half`
//
// ```html
// <div class="Item -size--small">
//     <div class="Item_Cover -height--half" style="background-image: url(http://placepuppy.it/800/600/)">
//         <div class="Item_Info">
//             <div class="Item_Supertitle">Supertitle</div>
//             <h2 class="Item_Title">Title</h2>
//         </div>
//     </div>
// </div>
// ```
//
// #### `-height--twothirds`
//
// ```html
// <div class="Item -size--small">
//     <div class="Item_Cover -height--twothirds" style="background-image: url(http://placepuppy.it/800/600/)">
//         <div class="Item_Info">
//             <div class="Item_Supertitle">Supertitle</div>
//             <h2 class="Item_Title">Title</h2>
//         </div>
//     </div>
// </div>
// ```
//
// ### `-image_align--*`
//
// By default the cover image is positioned in the center of the subcomponent,
// cropping from all sides. The image can be aligned to any of the four edges,
// or some combination of two adjacent edges.
//
// ```html
// <div class="Item -size--fourth">
//     <div class="Item_Cover -image_align--top" style="background-image: url(http://placepuppy.it/800/600/)">
//         <div class="Item_Info">
//             <div class="Item_Supertitle">Supertitle</div>
//             <h2 class="Item_Title">Title, <code>-image_align--top</code></h2>
//         </div>
//     </div>
// </div><div class="Item -size--fourth">
//     <div class="Item_Cover -image_align--right" style="background-image: url(http://placepuppy.it/800/600/)">
//         <div class="Item_Info">
//             <div class="Item_Supertitle">Supertitle</div>
//             <h2 class="Item_Title">Title, <code>-image_align--right</code></h2>
//         </div>
//     </div>
// </div><div class="Item -size--fourth">
//     <div class="Item_Cover -image_align--bottom" style="background-image: url(http://placepuppy.it/800/600/)">
//         <div class="Item_Info">
//             <div class="Item_Supertitle">Supertitle</div>
//             <h2 class="Item_Title">Title, <code>-image_align--bottom</code></h2>
//         </div>
//     </div>
// </div><div class="Item -size--fourth">
//     <div class="Item_Cover -image_align--left" style="background-image: url(http://placepuppy.it/800/600/)">
//         <div class="Item_Info">
//             <div class="Item_Supertitle">Supertitle</div>
//             <h2 class="Item_Title">Title, <code>-image_align--left</code></h2>
//         </div>
//     </div>
// </div>
// ```
%Item_CoverImage
    +extend(Cover_Image)


// General grouping element.
%Item_Info
    @extend %_Item_Subcomponent

    &%-pinned--bottom
        position    : absolute
        bottom      : 0

    &%-pinned--top
        position    : absolute
        top         : 0

    &%-pinned--left
        position    : absolute
        left        : 0

    &%-pinned--right
        position    : absolute
        right       : 0

    &%-centered--horizontal
        text-align  : center
        margin      : 0 auto



%Item_Supertitle
    @extend %_Item_Subcomponent



%Item_Title
    @extend %_Item_Subcomponent



%Item_Subtitle
    @extend %_Item_Subcomponent



%Item_Deck
    @extend %_Item_Subcomponent





// Generate the actual selectors for direct usage, instead of @extending.

@if $formwork--generate_selectors
    .Item
        +extend(Item)
        &.-intrinsic_ratio
            +extend-variants(Cover, intrinsic_ratio)
    @each $selector in (CoverImage, Info, Supertitle, Title, Subtitle, Deck)
        .Item_#{ $selector }
            +extend(Item_#{ $selector })

    .Item
        @each $size in small, medium, large, fifth, fourth, third, half
            &.-size--#{ $size }
                @extend %Item%-size--#{ $size }
                &.-intrinsic_ratio
                    @extend %Item%-size--#{ $size }%-intrinsic_ratio

    .Item_CoverImage
        @each $align in top, bottom, left, right
            &.-image_align--#{ $align }
                +extend-variants(Item_CoverImage, image_align $align)
        @each $height in quarter, half, twothirds
            &.-height--#{ $height }
                +extend-variants(Item_CoverImage, height $height)

    .Item_Info
        @each $align in top, bottom, left, right
            &.-pinned--#{ $align }
                +extend-variants(Item_Info, pinned $align)
